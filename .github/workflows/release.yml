name: Release, Build & Push Docker to GHCR


on:
  push:
    branches:
      - main

permissions:
  contents: read

env:
  APP_NAME: ${{ vars.APP_NAME }}
  CERTS_PATH: './storage/app/private'

jobs:
  release:
    permissions:
      contents: write
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-
      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-suggest
          npm ci
      - run: npx semantic-release@21.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  docker:
    needs: release
    name: Build & Push Docker to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction

      - name: Copy Private and Public Keys
        run: |
          echo "${{ secrets.SAMPLE_PRIVATE_KEY }}" > ${CERTS_PATH}/private.key
          echo "${{ secrets.SAMPLE_PUBLIC_KEY }}" > ${CERTS_PATH}/public.key
          chmod 600 ${CERTS_PATH}/private.key ${CERTS_PATH}/public.key
          tree ${CERTS_PATH}

      - name: Sync OpenAPI swagger version
        run: |
          git pull origin main
          ./vendor/bin/openapi app -f json -o ./resources/swagger/openapi.json
          tree resources/swagger
          node scripts/sync-openapi-version.js

      - name: Get Git tag if exists
        id: vars
        run: |
          TAG=$(git ls-remote --tags origin | grep -o 'refs/tags/.*' | sed 's|refs/tags/||' | sort -V | tail -n 1 || echo "")
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Set Docker tag
        id: docker_tag
        run: |
          if [ -z "${{ steps.vars.outputs.tag }}" ]; then
            echo "Docker tag is: latest"
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            TAG_CLEANED=$(echo "${{ steps.vars.outputs.tag }}" | sed 's/^v//')
            echo "Docker tag is: $TAG_CLEANED"
            echo "tag=$TAG_CLEANED" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/app/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:${{ steps.docker_tag.outputs.tag }}